name: Continuous Deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
#   deployment:
#     runs-on: self-hosted
#     steps:
#       - run: cd /home/git_action/diplomka/
#       - run: git pull https://${{ secrets.GIT_KEY }}@github.com/meda10/diplomka.git
#       - run: docker-compose run --rm composer update --no-dev
#       - run: docker-compose run --rm composer install --no-dev --no-interaction --no-plugins --no-progress --no-scripts --optimize-autoloader
#       - run: docker-compose run --rm artisan config:cache
#       - run: docker-compose run --rm artisan route:cache
#       - run: docker-compose run --rm npm ci
#       - run: docker-compose run --rm npm run production
#       - run: docker-compose restart nginx php mysql
      
  deploy-to-digital-ocean-droplet:
    runs-on: ubuntu-latest
    name: Deploy to DigitalOcean
    steps:
      - name: Checkout master
        uses: actions/checkout@master
        
      - name: Pull from GitHub
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_KEY }}
          port: ${{ secrets.PORT }}
          script: cd /home/git_action/diplomka/ && git pull https://${{ secrets.GIT_KEY }}@github.com/meda10/diplomka.git
          
      - name: Docker Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/git_action/diplomka/
            docker-compose run --rm composer update --no-dev
            docker-compose run --rm composer install --no-dev --no-interaction --no-plugins --no-progress --no-scripts --optimize-autoloader
            docker-compose run --rm artisan config:cache
            docker-compose run --rm artisan route:cache
            docker-compose run --rm npm ci
            docker-compose run --rm npm run production
            docker-compose restart nginx php-app mysql
      
